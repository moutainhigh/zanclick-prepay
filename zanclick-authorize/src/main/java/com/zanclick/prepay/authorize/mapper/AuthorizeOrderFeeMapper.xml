<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zanclick.prepay.authorize.mapper.AuthorizeOrderFeeMapper">
    <resultMap id="BaseResultMap" type="com.zanclick.prepay.authorize.entity.AuthorizeOrderFee">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="money" property="money" jdbcType="VARCHAR"/>
        <result column="service_money" property="serviceMoney" jdbcType="VARCHAR"/>
        <result column="order_real_money" property="orderRealMoney" jdbcType="VARCHAR"/>
        <result column="first_money" property="firstMoney" jdbcType="VARCHAR"/>
        <result column="each_money" property="eachMoney" jdbcType="VARCHAR"/>
        <result column="cycle" property="cycle" jdbcType="INTEGER"/>
        <result column="order_no" property="orderNo" jdbcType="VARCHAR"/>
        <result column="request_no" property="requestNo" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="table">authorize_order_fee</sql>

    <sql id="Base_Column_List">
        id,
        money,
        service_money,
        order_real_money,
        first_money,
        each_money,
        cycle,
        order_no,
        request_no
    </sql>

    <sql id="Base_Where_Clause">
        <where>
            <trim prefixOverrides="and">
                <if test="id != null">AND id = #{id}</if>
                <if test="orderNo != null and orderNo != ''">AND order_no = #{orderNo}</if>
                <if test="requestNo != null and requestNo != ''">AND request_no = #{requestNo}</if>
            </trim>
        </where>
        ORDER BY id DESC
        <if test="offset == null and limit != null">
            limit #{limit}
        </if>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </sql>

    <!-- 查询总数 -->
    <select id="selectCount" resultType="java.lang.Long" parameterType="java.util.Map">
        SELECT count(id)
        FROM
        <include refid="table"/>
        <include refid="Base_Where_Clause"/>
    </select>

    <!-- 查询 -->
    <select id="select" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="table"/>
        <include refid="Base_Where_Clause"/>
    </select>

    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="table"/>
        WHERE id=#{id}
    </select>

    <select id="selectByRequestNo" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="table"/>
        WHERE request_no = #{requestNo} ORDER BY id DESC LIMIT 1
    </select>

    <select id="selectByOrderNo" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="table"/>
        WHERE order_no = #{orderNo} ORDER BY id DESC LIMIT 1
    </select>

    <insert id="insert" parameterType="com.zanclick.prepay.authorize.entity.AuthorizeOrderFee" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO
        <include refid="table"/>
        (
        id,
        money,
        service_money,
        order_real_money,
        first_money,
        each_money,
        cycle,
        order_no,
        request_no
        )
        VALUES
        (
        #{id},
        #{money},
        #{serviceMoney},
        #{orderRealMoney},
        #{firstMoney},
        #{eachMoney},
        #{cycle},
        #{orderNo},
        #{requestNo}
        )
    </insert>

    <insert id="insertBatch" parameterType="java.util.List" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="table"/>
        (
        id,
        money,
        service_money,
        order_real_money,
        first_money,
        each_money,
        cycle,
        order_no,
        request_no
        )
        VALUES
        <foreach collection="list" item="cm" index="index" separator=",">
            (
            #{cm.id},
            #{cm.money},
            #{cm.serviceMoney},
            #{cm.orderRealMoney},
            #{cm.firstMoney},
            #{cm.eachMoney},
            #{cm.cycle},
            #{cm.orderNo},
            #{cm.requestNo}
            )
        </foreach>
    </insert>
</mapper>